
/* Glassmorphism and modern effects */
@layer utilities {
  .glass-card {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  }
  
  .glass-dark {
    background: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .neumorphism {
    background: #e0e5ec;
    border-radius: 20px;
    box-shadow: 9px 9px 16px #a3b1c6, -9px -9px 16px #ffffff;
  }
  
  .neumorphism-inset {
    background: #e0e5ec;
    border-radius: 20px;
    box-shadow: inset 9px 9px 16px #a3b1c6, inset -9px -9px 16px #ffffff;
  }
  
  .gradient-text {
    background: linear-gradient(135deg, #003893 0%, #CF2027 50%, #F7D116 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .hover-glow {
    transition: all 0.3s ease;
  }
  
  .hover-glow:hover {
    box-shadow: 0 0 20px rgba(0, 56, 147, 0.3);
    transform: translateY(-2px);
  }
  
  .floating-animation {
    animation: floating 3s ease-in-out infinite;
  }
  
  @keyframes floating {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }
}
</neumorphism>

<lov-write file_path="src/components/ui/theme-toggle.tsx">
import React, { useEffect, useState } from 'react';
import { Moon, Sun } from 'lucide-react';
import { Button } from '@/components/ui/button';

const ThemeToggle = () => {
  const [theme, setTheme] = useState<'light' | 'dark'>('light');

  useEffect(() => {
    const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    const initialTheme = savedTheme || (prefersDark ? 'dark' : 'light');
    setTheme(initialTheme);
    document.documentElement.classList.toggle('dark', initialTheme === 'dark');
  }, []);

  const toggleTheme = () => {
    const newTheme = theme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
    localStorage.setItem('theme', newTheme);
    document.documentElement.classList.toggle('dark', newTheme === 'dark');
  };

  return (
    <Button
      variant="ghost"
      size="sm"
      onClick={toggleTheme}
      className="glass-card hover-glow"
      aria-label={`Alternar para modo ${theme === 'light' ? 'escuro' : 'claro'}`}
    >
      {theme === 'light' ? (
        <Moon className="h-4 w-4" />
      ) : (
        <Sun className="h-4 w-4" />
      )}
    </Button>
  );
};

export default ThemeToggle;
